import java.util.*;

public abstract class Password 
{
	private char[] pass; //stores the password generated by the generatePass() method. 
	//All comparisons done within this class.

	public Password()
	{
		pass = generatePass(); //this will tell the compiler to look for a implementation in some subclass
	}
  
	public abstract char[] generatePass(); //each subclass should override this
	public abstract boolean guess(); //each subclass should override this
	
	public char[] compare(char[] pass2) //returns a char[] of the password with - where there is a wrong guess and the correct output for a right guess
	{
		char[] wrongPlaces = new char[pass.length];
		ArrayList<Character> tempPass = new ArrayList<Character>(); //used for comparisons so that you dont modify password value
		for(char c : pass) {
		    tempPass.add(c);
		}
		for(int i = 0; i<pass.length; i++) 
		{
			if(tempPass.get(i) != pass2[i])
			{
				if(tempPass.indexOf(pass2[i])!=-1)
				{
					int ind = tempPass.indexOf(pass2[i]);
					wrongPlaces[i] = ((char)(ind+'0'));
					tempPass.set(i, '*'); //* is filler character, so that contains will move to next instance of letter
				}
				else
				{
					wrongPlaces[i] = '-';
				}
			}
			else
				wrongPlaces[i] = pass[i];
		}
		return wrongPlaces;
	}
	
	public static boolean passEquals(char[] pass1, char[] pass2)
	{
		int i=0;
		for(char p:pass1)
		{
			if(p!=pass2[i])
				return false;
			i++;
		}
		return true;
	}
}
